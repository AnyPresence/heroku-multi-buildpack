#!/usr/bin/env ruby

$stdout.sync = true

$:.unshift File.expand_path("../../lib", __FILE__)
require 'multipack'

log "Processing #{TRIGGER_FILE_NAME}..."

repos = IO.readlines(TRIGGER_FILE)
env_vars = ""
counter = 0
repos.each do |git_repo|
  git_repo.strip!
  next if git_repo.empty?
  name = git_repo.split('/').last
  log "Cloning #{name}"
  dir = Dir.mktmpdir
  output = run_command "git clone #{git_repo} #{dir} >/dev/null 2>&1 "
  if $?.success?
    Dir.chdir dir
    bin_dir = File.join(dir,'bin')
    detect = File.join(bin_dir,'detect')
    compile = File.join(bin_dir,'compile')
    release = File.join(bin_dir,'release')
    fix_executable_permissions(detect,compile,release)

    log "Detecting..."    
    detect_output = run_command "#{detect} #{WORK_DIR}"
    if $?.success?
      log "Compiling..."
      compile_output = run_command "#{compile} #{WORK_DIR} #{CACHE_DIR} "
      
      if $?.success?
        if detect_output.start_with? 'Ruby/Rails'
          log "Running: rake assets:precompile"
          spath = "/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin"
          slug_vendor_base = "vendor/bundle/ruby/2.0.0"
          bundler_version = "bundler-1.3.2"
          bundler_path   = "./#{slug_vendor_base}/gems/#{bundler_version}/lib"
          log run_command "curl https://s3.amazonaws.com/heroku-buildpack-ruby/#{bundler_version}.tgz -s -o - | tar xzf -
"
          run_command "ls -alh . "
          precompile_output = run_command "env PATH=#{spath}:#{bundler_path}/bin bundle exec rake assets:precompile 2>&1"
          log precompile_output
        end
        
        log "Compiled successfully. Invoking release..."
        
        release_output = run_command "#{release} #{WORK_DIR} #{CACHE_DIR} "
        
        if $?.success?
          log "Collected release output"
          parse_release_vars(release_output)
          counter = counter + 1
        else
          log "Error releasing!"
        end
      else
        log "Error compiling #{compile_output}"
      end
    end
  else
    log "Failed to clone #{git_repo}!"
  end
  
  exit 1 unless $?.success?
end

log "Putting releases together..."
save_release_file()
if counter > 1
  puts "=====> Done compiling all #{counter} buildpacks!"
else
  puts "=====> Done compiling buildpack!"
end
