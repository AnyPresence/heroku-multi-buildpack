#!/usr/bin/env ruby

$:.unshift File.expand_path("../../lib", __FILE__)
require 'multipack'
require 'tmpdir'

log "Processing #{TRIGGER_FILE_NAME}..."

repos = IO.readlines(TRIGGER_FILE)

repos.each do |git_repo|
  git_repo.strip!
  name = git_repo.split('/').last
  log "Cloning #{name}"
  dir = File.join(WORK_DIR,name)
  FileUtils.mkdir(dir)
  puts "Executing 'git clone #{git_repo} #{dir}'"
  output = `git clone #{git_repo} #{dir}`
  result = $?.success?
  if result
    log "Detecting argument array is actually #{ARGV.inspect}"
    bin_dir = File.join(dir,'bin')
    detect_executable = File.join(bin_dir,'detect')
    compile_executable = File.join(bin_dir,'compile')
    release_executable = File.join(bin_dir,'release')
    
    `chmod +x #{detect_executable} #{compile_executable} #{release_executable}`
    detect_output = `#{detect_executable} #{WORK_DIR}`
    if $?.success?
      log "Successfully detected #{detect_output}"
      compile_output = `#{compile_executable} #{WORK_DIR} #{ARGV[1]}`
      
      if $?.success?
        log "Successfully compiled #{compile_output}"
        release_output = `#{release_executable} #{WORK_DIR}`
        
        if $?.success?
          log "Successfully released #{release_output}"
        else
          log "Error releasing #{release_output}"
        end
      else
        log "Error compiling #{compile_output}"
      end
    end
  else
    log "Failed to clone #{git_repo}!"
    exit 1
  end
end
